name: "Godot Export"
on:
  push:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      platform:
        description: "Build platform (all, Android, Windows, Linux)"
        type: choice
        options:
          - all
          - Android
          - Windows
          - Linux
        default: all
        required: true
      debug:
        description: "Build debug version"
        type: boolean
        default: true
        required: false

jobs:
  export-game:
    name: Export for ${{ matrix.platform }} (${{ matrix.build_type }})
    runs-on: ubuntu-24.04
    
    strategy:
      matrix:
        platform: ${{ (github.event.inputs.platform == 'all' || github.event.inputs.platform == '') && fromJson('["Android", "Windows", "Linux"]') || fromJson(format('["{0}"]', github.event.inputs.platform)) }}
        build_type: ${{ (github.event_name != 'workflow_dispatch' || github.event.inputs.debug == 'true') && fromJson('["debug"]') || fromJson('["release"]') }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('Builder/**') }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Builder
          push: false
          load: true
          tags: chronos-descent-builder:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      
      - name: Run build for ${{ matrix.platform }}
        run: |
          mkdir -p build
          
          if [ "${{ matrix.build_type }}" == "debug" ]; then
            docker run --rm -v ${{ github.workspace }}:/project -v ${{ github.workspace }}/build:/project/build chronos-descent-builder:latest ${{ matrix.platform }}
          else
            docker run --rm -v ${{ github.workspace }}:/project -v ${{ github.workspace }}/build:/project/build chronos-descent-builder:latest ${{ matrix.platform }} release
          fi
          
          ls -la build/
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Chronos-Descent_${{ matrix.platform }}_${{ matrix.build_type }}
          path: build/