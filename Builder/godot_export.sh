#!/bin/bash
set -e

# Create output directory
mkdir -p /project/build

cd $PROJECT_PATH

# Get build type from args or default to debug
BUILD_TARGET="${1}"
BUILD_TYPE="${2:-debug}"
EXPORT_FLAG="--export-${BUILD_TYPE}"
EXPORT_OUTPUT="/project/build/${EXPORT_NAME}_${BUILD_TARGET}_${BUILD_TYPE}.apk"

echo "Building ${BUILD_TYPE} version of ${EXPORT_NAME}..."

# Export the APK using Godot
echo "godot --headless --verbose \"${EXPORT_FLAG}\" \"${BUILD_TARGET}\" \"${EXPORT_OUTPUT}\""
godot --headless --verbose "${EXPORT_FLAG}" "${BUILD_TARGET}" "${EXPORT_OUTPUT}"

if [ "${BUILD_TARGET}" == "Android" ] && [ -f "${EXPORT_OUTPUT}" ] ; then
    # Find zipalign and apksigner in the Android SDK
    ZIPALIGN_PATH=$(find ${ANDROID_HOME}/build-tools -name "zipalign" -type f | sort -r | head -1)
    APKSIGNER_PATH=$(find ${ANDROID_HOME}/build-tools -name "apksigner" -type f | sort -r | head -1)

    # Optimize the APK
    echo "Aligning APK with ${ZIPALIGN_PATH}..."
    "${ZIPALIGN_PATH}" -v 4 "${EXPORT_OUTPUT}" "/project/build/${EXPORT_NAME}_aligned.apk"

    echo "Signing APK with ${APKSIGNER_PATH}..."
    "${APKSIGNER_PATH}" sign --ks /root/debug.keystore \
        --ks-pass pass:android \
        --key-pass pass:android \
        --out "/project/build/${EXPORT_NAME}_signed.apk" \
        "/project/build/${EXPORT_NAME}_aligned.apk"

    "${APKSIGNER_PATH}" verify --verbose "/project/build/${EXPORT_NAME}_signed.apk"

    # Replace original with optimized version
    mv "/project/build/${EXPORT_NAME}_signed.apk" "${EXPORT_OUTPUT}"
    rm "/project/build/${EXPORT_NAME}_aligned.apk"

    echo "✅ Build successful! Final APK is at: ${EXPORT_OUTPUT}"
else
    echo "❌ ERROR: APK was not generated by Godot"
    exit 1
fi
